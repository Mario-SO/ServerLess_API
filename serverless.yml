service: aws-python3 # NOTE: update this with your service name

custom:
  tablename: MainTable
  tableThroughput: 1

plugins:
  - serverless-pseudo-parameters

provider:
  name: aws
  runtime: python3.7
  region: eu-west-1

  # Como esta dentro de provider -> le da este role a todas las funciones que definamos en la app
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        # Sobre el recurso que actua es decir la tabla
        - arn:aws:dynamodb:${self:provider.region}:#{AWS::AccountId}:${self:custom.tableName}
       
functions:
  hello:
    handler: handler.hello

resources:
  Resources:
    NotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: noteId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: noteId
            KeyType: RANGE
        # Set the capacity based on the stage
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}